

buildscript {
	repositories {
		maven{ url 'https://maven.aliyun.com/repository/public'}
		maven { url 'https://maven.aliyun.com/repositories/jcenter' }
		maven { url 'https://maven.aliyun.com/repositories/google' }
		maven { url 'https://maven.aliyun.com/repository/central' }
	}
}


plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
}

allprojects {
	repositories {
		maven { url 'https://maven.aliyun.com/repository/public'}
		maven { url 'https://maven.aliyun.com/repositories/jcenter' }
		maven { url 'https://maven.aliyun.com/repositories/google' }
		maven { url 'https://maven.aliyun.com/repository/central' }
		maven { url "https://jitpack.io" }
	}
}

group = 'me.qingqing'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// https://mvnrepository.com/artifact/com.baomidou/mybatis-plus
	implementation group: 'com.baomidou', name: 'mybatis-plus', version: '3.5.4.1'

	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
	implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.0.33'



	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// https://mvnrepository.com/artifact/com.baomidou/mybatis-plus
	testImplementation group: 'com.baomidou', name: 'mybatis-plus', version: '3.5.4.1'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	// https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
	implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.0.33'


}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}